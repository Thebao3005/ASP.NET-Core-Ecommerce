@model IEnumerable<ECommerceMVC.ViewModels.HangHoaVM>

<style>
	.countdown-timer {
		font-size: 0.6rem; /* nhỏ hơn mặc định */
		padding: 2px 6px;
		border-radius: 7px;
		background-color: #dc3545; /* đỏ */
		color: white;
		display: inline-block;
		margin-top: 5px;
	}
</style>
<div class="col-lg-12">
	<h4 class="mb-4">Siêu Sale</h4>
	@foreach (var sp in Model)
	{
		<div class="d-flex align-items-start mb-4 p-2 shadow-sm rounded border bg-white" style="gap: 15px;">
			<div class="position-relative" style="width: 100px; height: 100px; overflow: hidden; border-radius: 10px;">
				<a asp-action="Detail" asp-route-id="@sp.MaHh">
					<img src="~/Hinh/HangHoa/@sp.Hinh" class="img-fluid w-100 h-100 object-fit-cover transition-transform" alt="@sp.TenHh">
				</a>
				<div class="position-absolute top-0 start-0 bg-danger text-white px-2 py-1 rounded-end small fw-bold countdown-timer" data-time="@sp.EndTime">
					00:00:00
				</div>
			</div>
			<div class="flex-grow-1">
				<h6 class="mb-1 fw-semibold">@sp.TenHh</h6>
				<div class="d-flex mb-1">
					@for (int i = 1; i <= 5; i++)
					{
						<i class="fa fa-star text-warning me-1"></i>
					}
				</div>
				<div class="d-flex flex-column">
					<small class="text-decoration-line-through text-muted">@sp.DonGia VND</small>
					<small class="fw-bold text-danger">@((sp.DonGia * (1 - sp.GiamGia / 100.0))) VND</small>
				</div>
			</div>
		</div>
	}
	<div class="d-flex justify-content-center my-4">
		<a href="/MuaChung/Index" class="btn border border-secondary px-4 py-3 rounded-pill text-primary w-100">Xem Thêm</a>
	</div>
</div>

<script>
	document.querySelectorAll('.countdown-timer').forEach(function (timer) {
		const endTime = new Date(timer.getAttribute('data-time')).getTime();

		function updateCountdown() {
			const now = new Date().getTime();
			const distance = endTime - now;

			if (distance < 0) {
				timer.innerHTML = "Hết hạn";
				timer.classList.remove('bg-danger');
				timer.classList.add('bg-secondary');
				return;
			}

			const days = Math.floor(distance / (1000 * 60 * 60 * 24));
			const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
			const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
			const seconds = Math.floor((distance % (1000 * 60)) / 1000);

			timer.innerHTML = `${days}d ${hours.toString().padStart(2, '0')}:${minutes
				.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
		}

		updateCountdown();
		setInterval(updateCountdown, 1000);
	});
</script>
